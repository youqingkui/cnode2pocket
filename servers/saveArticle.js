// Generated by CoffeeScript 1.8.0
(function() {
  var Article, ArticleSave, User, async, request;

  request = require('request');

  async = require('async');

  Article = require('../models/article');

  User = require('../models/user');

  ArticleSave = (function() {
    function ArticleSave() {
      this.baseUrl = 'https://cnodejs.org/api/v1/topics?tab=good&page=';
      this.urlArr = [];
    }

    ArticleSave.prototype.getPage = function(page, cb) {
      var self, url;
      self = this;
      url = self.baseUrl + page;
      return async.auto({
        getInfo: function(callback) {
          return request.get(url, function(err, res, body) {
            var data;
            if (err) {
              return console.log(err);
            }
            data = JSON.parse(body);
            return callback(null, data);
          });
        },
        pieceUrl: [
          'getInfo', function(callback, result) {
            var data;
            data = result.getInfo;
            if (data.data.length) {
              return data.data.forEach(function(item) {
                var tmp;
                tmp = {
                  url: 'https://cnodejs.org/topic/' + item.id,
                  title: item.title,
                  created: Date.now()
                };
                Article.findOne({
                  url: tmp.url
                }, function(err, row) {
                  var newArt;
                  if (err) {
                    return console.log(err);
                  }
                  if (!row) {
                    newArt = new Article(tmp);
                    newArt.save(function(err2, row2) {
                      if (err2) {
                        return console.log(err2);
                      }
                      return console.log(row2);
                    });
                    return self.pushUser(tmp);
                  }
                });
                return callback();
              });
            } else {
              return console.log("page =>", page, data);
            }
          }
        ]
      });
    };

    ArticleSave.prototype.pushUser = function(info) {
      var form, self, users;
      self = this;
      form = {
        url: info.url,
        title: info.title,
        tags: 'Cnode',
        consumer_key: process.env.pocket,
        access_token: ''
      };
      users = [];
      return async.auto({
        findUser: function(cb) {
          return User.find({
            subscribe: true
          }, function(err, rows) {
            if (err) {
              return console.log(err);
            }
            users = rows;
            return cb();
          });
        },
        pushInfo: [
          'findUser', function(cb) {
            return async.eachLimit(users, 10, function(item, callback) {
              var op;
              form.access_token = item.token;
              op = {
                form: form,
                url: 'https://getpocket.com/v3/add'
              };
              return request.post(op, function(err, res, body) {
                if (err) {
                  return console.log(err);
                }
                console.log(body);
                return callback();
              });
            }, function() {
              return console.log("### eachLimit all do ###");
            });
          }
        ]
      });
    };

    return ArticleSave;

  })();

  module.exports = ArticleSave;

}).call(this);

//# sourceMappingURL=saveArticle.js.map
